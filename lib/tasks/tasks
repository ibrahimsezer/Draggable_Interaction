___________________________________________________________
#MainBoard.dart
-ChangeNotifier and Stateful Widget will be separated+
-Try-catch can be used in Hive operations
-Dart functions that can be used instead of for in list iterations will be checked.
___________________________________________________________
#shape.dart

-We can take the triangle starting point and angle as parameters for CustomClipper expansion
final double startFraction
final double endFraction
CustomTriangleClipper ({this.startFraction=0.5,this.endFraction=1})

-Widget Structure - Size, border color, etc. for multiple use cases. can be determined
final double width
final double height
final Color borderColor
const CustomTriangleClipper({this.width = 100,this.height = 100,this.borderColor = Colors.black})
___________________________________________________________
Widget frames remain unclickable after resizing
Widget delete with using topBarMenu
Edit widget button folder
Save widget info in database
Group widgets
Add widget in board
Move widget to front or back
Create hive database
___________________________________________________________
#widget_provider.dart
boxPersons = await Hive.openBox<Person>('personBox');
boxPersons.put
boxPersons.deleteAt(index);
boxPersons.clear();
___________________________________________________________
#main.dart
await Hive.initFlutter();
Hive.registerAdapter(WidgetDataAdapter());

add dependencies
create class
auto generate class.g
init flutter
register adapter
openbox create box file
get | put | deleteAt | clear
___________________________________________________________
pin draggable widgets in canvas (position and size saved)
The widget size should be calculated based on the canvas size, not the visible screen.
canvas boundaries should be determined or an endless canvas should be made
___________________________________________________________
Change activity bar position for every screen size (mobile,tv,etc.)

___________________________________________________________
widget left top coordinate = 0,0
screen left | RenderTwoDimensionalGridViewport.horizontalGlobalPixels
screen top |RenderTwoDimensionalGridViewport.verticalGlobalPixels

-Ekran hangi noktaya doğru kayıyorsa, widget'ları tam tersine aynı değerde kaydırma işlemi için kontrol yapılmalı.

if screen.isSlideForLeft:
	widget.slideHorizontalValue -= widget.horizontal;
if screen.isSlideForRight:
	widget.slideHorizontalValue += widget.horizontal;
if screen.isSlideForTop:
	widget.slideVerticalValue += widget.vertical;
if screen.isSlideForBottom:
	widget.slideVerticalValue -= widget.vertical;

    screenCoord              | WidgetCoord
    horizontalGlobalPixels          myPosX
    verticalGlobalPixels            myPosY
	                0 , 100
	                100 , 200
	                200 , 300
