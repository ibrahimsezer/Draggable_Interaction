___________________________________________________________
#MainBoard.dart
-ChangeNotifier and Stateful Widget will be separated+
todo -Try-catch can be used in Hive operations
todo -Dart functions that can be used instead of for in list iterations will be checked.
___________________________________________________________
#shape.dart

todo -We can take the triangle starting point and angle as parameters for CustomClipper expansion
final double startFraction
final double endFraction
CustomTriangleClipper ({this.startFraction=0.5,this.endFraction=1})

todo -Widget Structure - Size, border color, etc. for multiple use cases. can be determined
final double width
final double height
final Color borderColor
const CustomTriangleClipper({this.width = 100,this.height = 100,this.borderColor = Colors.black})
___________________________________________________________
todo Widget frames remain unclickable after resizing
todo Widget delete with using topBarMenu
todo Edit widget button folder
todo Save widget info in database
todo Group widgets
todo Add widget in board
todo Move widget to front or back
todo Create hive database
___________________________________________________________
#widget_provider.dart
boxPersons = await Hive.openBox<Person>('personBox');
boxPersons.put
boxPersons.deleteAt(index);
boxPersons.clear();
___________________________________________________________
#main.dart
await Hive.initFlutter();
Hive.registerAdapter(WidgetDataAdapter());

add dependencies
create class
auto generate class.g
init flutter
register adapter
openbox create box file
get | put | deleteAt | clear
___________________________________________________________
todo pin draggable widgets in canvas (position and size saved)
todo The widget size should be calculated based on the canvas size, not the visible screen.
todo canvas boundaries should be determined or an endless canvas should be made
___________________________________________________________
todo Change activity bar position for every screen size (mobile,tv,etc.)

___________________________________________________________
widget left top coordinate = 0,0
screen left | RenderTwoDimensionalGridViewport.horizontalGlobalPixels
screen top |RenderTwoDimensionalGridViewport.verticalGlobalPixels

-Ekran hangi noktaya doğru kayıyorsa, widget'ları tam tersine aynı
değerde kaydırma işlemi için kontrol yapılmalı.

if screen.isSlideForLeft:
	widget.slideHorizontalValue -= widget.horizontal;
if screen.isSlideForRight:
	widget.slideHorizontalValue += widget.horizontal;
if screen.isSlideForTop:
	widget.slideVerticalValue += widget.vertical;
if screen.isSlideForBottom:
	widget.slideVerticalValue -= widget.vertical;

WidgetModel.widgetModelList.map((e) {
          if (horizontalOffset.pixels > 0) {
            e.posX -= RenderTwoDimensionalGridViewport.horizontalGlobalPixels;
          } else {
            e.posX += RenderTwoDimensionalGridViewport.horizontalGlobalPixels;
          }
          if (verticalOffset.pixels > 0) {
            e.posY -= RenderTwoDimensionalGridViewport.verticalGlobalPixels;
          } else {
            e.posY += RenderTwoDimensionalGridViewport.verticalGlobalPixels;
          }
        });
___________________________________________________________
todo The POS values coming from the modular widget must be the same as the other POS values.
